.liquid-glass {
  position: relative;
  transition: opacity 0.26s ease-out;
  border-radius: 28px;

  &.demo {
    height: calc(var(--height) * 1px);
    width: calc(var(--width) * 1px);
    border-radius: calc(var(--radius) * 1px);
  }

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: 0;
    overflow: hidden;
    border-radius: inherit;

    background: light-dark(hsl(0 0% 100% / var(--frost, 0)),
        hsl(0 0% 0% / var(--frost, 0)));

    /* box-shadow: 0 0 2px 1px light-dark(color-mix(in oklch, canvasText, #0000 85%),
        color-mix(in oklch, canvasText, #0000 65%)) inset,
      0 0 10px 4px light-dark(color-mix(in oklch, canvasText, #0000 90%),
        color-mix(in oklch, canvasText, #0000 85%)) inset,
      0px 4px 16px rgba(17, 17, 26, 0.05), 0px 8px 24px rgba(17, 17, 26, 0.05),
      0px 16px 56px rgba(17, 17, 26, 0.05),
      0px 4px 16px rgba(17, 17, 26, 0.05) inset,
      0px 8px 24px rgba(17, 17, 26, 0.05) inset,
      0px 16px 56px rgba(17, 17, 26, 0.05) inset; */
      
    --glass-reflex-light: 1;
    --glass-reflex-dark: 1;
    --c-light: #fff;
    --c-dark: #000;

    --glass-reflex-color-light: color-mix(in srgb,
        var(--c-light) calc(var(--glass-reflex-light) * 100%),
        transparent);
    --glass-reflex-color-dark: color-mix(in srgb,
        var(--c-dark) calc(var(--glass-reflex-dark) * 100%),
        transparent);

    --glass-reflex-color: light-dark(var(--glass-reflex-color-light),
        var(--glass-reflex-color-dark));
    box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--glass-reflex-color) 10%, transparent),
      inset 1.8px 3px 0px -2px color-mix(in srgb, var(--glass-reflex-color) 90%, transparent),
      inset -2px -2px 0px -2px color-mix(in srgb, var(--glass-reflex-color) 80%, transparent),
      inset -3px -8px 1px -6px color-mix(in srgb, var(--glass-reflex-color) 60%, transparent),
      inset -0.3px -1px 4px 0px color-mix(in srgb, var(--glass-reflex-color) 12%, transparent),
      inset -1.5px 2.5px 0px -2px color-mix(in srgb, var(--glass-reflex-color) 20%, transparent),
      inset 0px 3px 4px -2px color-mix(in srgb, var(--glass-reflex-color) 20%, transparent),
      inset 2px -6.5px 1px -4px color-mix(in srgb, var(--glass-reflex-color) 10%, transparent),
      0px 1px 5px 0px color-mix(in srgb, var(--glass-reflex-color) 10%, transparent),
      0px 6px 16px 0px color-mix(in srgb, var(--glass-reflex-color) 8%, transparent);
  }

  &::after {
    content: "";
    position: absolute;
    z-index: -1;
    inset: 0;
    border-radius: inherit;
    -webkit-backdrop-filter: blur(0px);
    backdrop-filter: blur(0px);
    -webkit-filter: var(--filter-url, none);
    filter: var(--filter-url, none);
    overflow: hidden;
    isolation: isolate;
  }

  .filter {
    width: 100%;
    height: 100%;
    pointer-events: none;
    position: absolute;
    inset: 0;
  }

  .displacement-debug {
    pointer-events: none;
    height: 100%;
    width: 100%;
    position: absolute;
    inset: 0;
    translate: 0 calc(200% + 1rem);
    scale: 0.8;
    opacity: 0;
    transition-property: translate, opacity, scale;
    transition-duration: 0.26s;
    transition-timing-function: ease-out;
    z-index: -1;

    .label {
      position: absolute;
      left: 50%;
      top: calc(100% + 0.2lh);

      span {
        display: inline-block;
        font-size: 0.875rem;
        font-family: "Gloria Hallelujah", cursive;
        padding: 0.5rem 0.75rem;
        background: color-mix(in oklch, canvas, #0000 25%);
        backdrop-filter: blur(4px);
        border-radius: 6px;
        white-space: nowrap;
      }

      svg {
        position: absolute;
        filter: drop-shadow(0 2px 10px canvas);
        right: 100%;
        rotate: 40deg;
        translate: 25% 60%;
        scale: -1 1;
        width: 40px;
        top: 0;
      }
    }

    .displacement-image {
      height: 100%;
      width: 100%;
      pointer-events: none;
      border-radius: calc(var(--radius) * 1px);
    }
  }
}

[data-debug="true"] .liquid-glass .displacement-debug {
  translate: 0 calc(100% + 1rem);
  scale: 1;
  opacity: 1;
}

div.tp-dfwv {
  position: fixed;
  width: 280px;
  bottom: 8px;
  top: unset;
  view-transition-name: pane;
}

[data-top="true"] div.tp-dfwv {
  top: 8px;
}